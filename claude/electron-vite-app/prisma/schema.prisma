// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Conversation {
  id         String    @id @default(uuid())
  title      String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  messages   Message[]

  @@map("conversations")
}

model Message {
  id              String     @id @default(uuid())
  conversation_id String
  role            String     // user, assistant, system, tool
  content         String
  metadata        Json?      // additional metadata like model used, etc.
  tool_calls      ToolCall[]
  created_at      DateTime   @default(now())

  conversation Conversation @relation(fields: [conversation_id], references: [id], onDelete: Cascade)

  @@map("messages")
}

model ToolCall {
  id             String   @id @default(uuid())
  message_id     String
  tool_name      String
  server_id      String
  server_name    String?
  parameters     Json
  result         Json?
  execution_time Int?     // milliseconds
  status         String   // pending, success, error
  reasoning      String?  // LLM's reasoning for tool selection
  error_message  String?
  created_at     DateTime @default(now())

  message Message @relation(fields: [message_id], references: [id], onDelete: Cascade)

  @@map("tool_calls")
}

model AgentSession {
  id              String   @id @default(uuid())
  conversation_id String
  agent_type      String   // main, reasoning, fast
  model_name      String   // llama3.1:8b, deepseek-r1:8b, mistral:7b
  context_length  Int      @default(4096)
  max_tokens      Int      @default(1024)
  temperature     Float    @default(0.7)
  system_prompt   String?
  active          Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("agent_sessions")
}

model ServerConnection {
  id                String   @id @default(uuid())
  server_id         String   @unique
  name              String
  description       String?
  transport_type    String   // stdio, http
  command           String?  // for stdio
  args              Json?    // for stdio
  cwd               String?  // for stdio
  env               Json?    // for stdio
  url               String?  // for http
  headers           Json?    // for http
  enabled           Boolean  @default(true)
  auto_reconnect    Boolean  @default(true)
  reconnect_delay   Int      @default(5000)
  max_reconnect     Int      @default(5)
  last_connected_at DateTime?
  connection_count  Int      @default(0)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  tools ToolMetadata[]

  @@map("server_connections")
}

model ToolMetadata {
  id              String   @id @default(uuid())
  server_id       String
  tool_name       String
  description     String
  input_schema    Json
  category        String?
  tags            Json?    // array of strings
  examples        Json?    // array of examples
  usage_count     Int      @default(0)
  last_used_at    DateTime?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  server ServerConnection @relation(fields: [server_id], references: [server_id], onDelete: Cascade)

  @@unique([server_id, tool_name])
  @@map("tool_metadata")
}